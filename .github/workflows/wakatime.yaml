name: Scheduled WakaTime Update

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Allow to automate by schedule
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight

jobs:
  update-wakatime:
    runs-on: ubuntu-latest

    steps:
    - name: Set up environment variables
      run: |
        echo "BRANCH_NAME=workflow/wakatime_stats" >> $GITHUB_ENV
        echo "BOT_ACTION_NAME='GitHub Actions Bot'" >> $GITHUB_ENV
        echo "BOT_ACTION_MAIL='actions@github.com'" >> $GITHUB_ENV

    - name: Authenticate the GitHub CLI tool
      run: |
        gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}" 

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Necessary for operations that need full history
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create branch from origin/main
      run: |
        git config --global user.name ${{ env.BOT_ACTION_NAME }}
        git config --global user.email ${{ env.BOT_ACTION_MAIL }}
        [ -z "$(git ls-remote --heads origin ${{ env.BRANCH_NAME }})" ] && {
          echo "Branch ${{ env.BRANCH_NAME }} does not exist. Creating."
          git checkout -b ${{ env.BRANCH_NAME }} origin/main
          git push --set-upstream origin ${{ env.BRANCH_NAME }}
        } || {
          echo "Branch ${{ env.BRANCH_NAME }} already exists. Resetting to origin/main"
          git checkout ${{ env.BRANCH_NAME }}
          git reset --hard origin/main
          git push --force
        }

    - name: Update README using WakaTime
      id: wakatime
      uses: athul/waka-readme@master
      with:
        WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        BLOCKS: â£€â£„â£¤â£¦â£¶â£·â£¿
        AUTHOR_NAME: ${{ env.BOT_ACTION_NAME }}
        AUTHOR_EMAIL: ${{ env.BOT_ACTION_MAIL }}
        TARGET_BRANCH: ${{ env.BRANCH_NAME }}

    - name: Commit and push if there are changes
      run: |
        git config --global user.name ${{ env.BOT_ACTION_NAME }}
        git config --global user.email ${{ env.BOT_ACTION_MAIL }}
        git fetch origin
        git add -A
        CHANGED=$(git diff-index --name-only HEAD --)
        if [ -n "$CHANGED" ]; then
          git commit -m "Updated WakaTime stats"
          git push
        else
          echo "No changes detected."
          exit 0
        fi

    - name: Create Pull Request
      run: |
        git checkout ${{ env.BRANCH_NAME }}
        git pull
        HAS_CHANGES=$(git diff --name-only origin/main --)
        PR_EXISTS=$(gh pr list --base main --head ${{ env.BRANCH_NAME }} --state open | wc -l)
        echo "Has changes: $HAS_CHANGES"
        echo "PR already exists: $PR_EXISTS"
        if [ -n "$HAS_CHANGES" || "$PR_EXISTS" -eq "0" ]; then
          gh pr create \
            --base main \
            --head ${{ env.BRANCH_NAME }} \
            --title "Update WakaTime stats" \
            --body "README updated from workflow using wakatime.\nHurry up @${{ github.repository_owner }}! come and take a look ðŸš€" \
            --reviewer ${{ github.repository_owner }}
            --assignee ${{ github.repository_owner }} \
            --label workflow
        else
          echo "No changes detected or PR already exists. Deleting branch ${{ env.BRANCH_NAME }}"
          git checkout main
          git branch -D ${{ env.BRANCH_NAME }}
          git push origin --delete ${{ env.BRANCH_NAME }}
        fi
