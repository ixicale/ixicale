name: Scheduled WakaTime Update

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Allow to automate by schedule
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight

jobs:
  update-wakatime:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Necessary for operations that need full history

    - name: Set up environment variables
      run: |
        echo "BRANCH_NAME=workflow/wakatime_stats" >> $GITHUB_ENV
        echo "BOT_ACTION_NAME='GitHub Actions Bot'" >> $GITHUB_ENV
        echo "BOT_ACTION_MAIL='actions@github.com'" >> $GITHUB_ENV

    - name: Authenticate the GitHub CLI tool
      run: |
        gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}" 

    - name: Create or Update Branch
      run: |
        git config --global user.name ${{ env.BOT_ACTION_NAME }}
        git config --global user.email ${{ env.BOT_ACTION_MAIL }}
        git fetch origin
        EXISTS=$(git ls-remote --heads origin ${{ env.BRANCH_NAME }})
        if [ -n "$EXISTS" ]; then
          echo "Branch ${{ env.BRANCH_NAME }} already exists. Checking for updates."
          git checkout ${{ env.BRANCH_NAME }}
          git pull
          BEHIND=$(git log origin/${{ env.BRANCH_NAME }}..HEAD --oneline)
          echo "------------- Behind --------------"
          echo $BEHIND
          if [ -n "$BEHIND" ]; then
            echo "Branch ${{ env.BRANCH_NAME }} is behind. Updating."
            git merge origin/main || { 
              echo "Merge conflict. Resetting to master";
              git reset --hard origin/main;
              git push --force;
              exit 1;
            }
            git push
          else
            echo "Branch ${{ env.BRANCH_NAME }} is up to date."
          fi
        else
          echo "Branch ${{ env.BRANCH_NAME }} does not exist. Creating."
          git checkout -b ${{ env.BRANCH_NAME }}
          git push --set-upstream origin ${{ env.BRANCH_NAME }}
        fi

    - name: Update README using WakaTime
      id: wakatime
      uses: athul/waka-readme@master
      with:
        WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        BLOCKS: â£€â£„â£¤â£¦â£¶â£·â£¿
        AUTHOR_NAME: ${{ env.BOT_ACTION_NAME }}
        AUTHOR_EMAIL: ${{ env.BOT_ACTION_MAIL }}
        TARGET_BRANCH: origin/${{ env.BRANCH_NAME }}


    - name: Commit and push if there are changes
      run: |
        git config --global user.name ${{ env.BOT_ACTION_NAME }}
        git config --global user.email ${{ env.BOT_ACTION_MAIL }}
        git fetch origin
        git add -A
        CHANGED=$(git diff-index --name-only HEAD --)
        if [ -n "$CHANGED" ]; then
          git commit -m "Updated WakaTime stats"
          git push
        else
          echo "No changes detected."
          exit 0
        fi

    - name: Create Pull Request
      run: |
        PR_EXISTS=$(gh pr list --base main --head ${{ env.BRANCH_NAME }} --state open | wc -l)
        if [ "$PR_EXISTS" -eq "0" ]; then
          gh pr create \
            --base main \
            --head ${{ env.BRANCH_NAME }} \
            --title "workflow/wakatime_stats, Update WakaTime stats" \
            --body "README updated from workflow using wakatime. Hurry up @${{ github.repository_owner }}! come and take a look ðŸš€" \
            --reviewer ${{ github.repository_owner }}
        else
          echo "Pull request already exists."
          exit 0
        fi
